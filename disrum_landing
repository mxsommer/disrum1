import { useState } from "react";
import { motion } from "framer-motion";
import { Button } from "./components/ui/button";
import AiDock from "./components/AiDock";

const courses = [
  { id: 1, title: "Design Thinking 101", tags: ["beginner", "empathy"], progress: 80 },
  { id: 2, title: "Behavioral Psychology in UX", tags: ["psychology", "ux"], progress: 45 },
  { id: 3, title: "AI-Powered Prototyping", tags: ["ai", "tools"], progress: 0 },
];

function CourseCard({ course }) {
  return (
    <div className="bg-white p-4 shadow rounded-xl border border-gray-200">
      <h3 className="text-xl font-semibold mb-2">{course.title}</h3>
      <div className="flex gap-2 text-sm text-red-600 mb-2">
        {course.tags.map((tag, i) => (
          <span key={i} className="px-2 py-1 bg-red-100 rounded-full">#{tag}</span>
        ))}
      </div>
      <div className="h-2 bg-gray-200 rounded-full">
        <div
          className="h-2 bg-red-500 rounded-full"
          style={{ width: `${course.progress}%` }}
        />
      </div>
      <p className="mt-2 text-sm text-gray-600">Progress: {course.progress}%</p>
    </div>
  );
}

export default function DisrumLanding() {
  const [onboardStep, setOnboardStep] = useState(0);
  const [preferences, setPreferences] = useState({ level: null, topics: [], wantsSuggestions: false });
  const [suggestions, setSuggestions] = useState([]);
  const steps = [
    "What's your current experience level?",
    "What topics excite you most?",
    "Would you like personalized course suggestions?"
  ];

  const handleOnboardResponse = async () => {
    console.log("Onboarding step:", onboardStep, preferences);
    if (onboardStep === 2 && preferences.level && preferences.topics.length) {
      try {
        const response = await fetch("https://api.bysommer.net/ai/suggestions", {
          method: "POST",
          headers: { "Content-Type": "application/json" },
          body: JSON.stringify(preferences),
        });
        const result = await response.json();
        console.log("AI course suggestions received:", result);
        setSuggestions(result.suggestions || []);
      } catch (error) {
        console.error("Onboarding error:", error);
        alert("Failed to complete onboarding.");
      }
    }
    setOnboardStep((s) => (s + 1) % steps.length);
  };

  return (
    <main className="min-h-screen bg-white text-gray-900">
      <section className="flex flex-col items-center justify-center text-center px-6 py-20">
        <motion.h1
          className="text-5xl md:text-7xl font-bold text-red-600"
          initial={{ opacity: 0, y: -20 }}
          animate={{ opacity: 1, y: 0 }}
          transition={{ duration: 0.8 }}
        >
          Disrupt the Ordinary.
        </motion.h1>
        <motion.p
          className="mt-6 text-lg md:text-xl max-w-2xl"
          initial={{ opacity: 0, y: 20 }}
          animate={{ opacity: 1, y: 0 }}
          transition={{ duration: 0.9, delay: 0.4 }}
        >
          Welcome to DISRUM â€” where Design Thinking meets AI and behavioral psychology to empower a new generation of disruptors.
        </motion.p>
        <motion.div
          className="mt-10"
          initial={{ opacity: 0 }}
          animate={{ opacity: 1 }}
          transition={{ duration: 1.0, delay: 0.8 }}
        >
          <Button className="bg-red-600 text-white px-6 py-3 text-lg rounded-2xl shadow-md hover:bg-red-700">
            Explore Courses
          </Button>
        </motion.div>
      </section>

      <section className="px-6 py-20 bg-gray-50 border-t">
        <div className="max-w-4xl mx-auto text-center">
          <h2 className="text-3xl font-semibold mb-6">ðŸ’¡ AI-Powered Idea Canvas</h2>
          <p className="mb-8 text-gray-700">
            Brainstorm like never before. Use our AI mentor to shape your ideas, validate them, and structure projects in real-time.
          </p>
          <AiDock />
        </div>
      </section>

      <section className="px-6 py-20 bg-white border-t">
        <div className="max-w-5xl mx-auto">
          <h2 className="text-3xl font-semibold mb-6 text-center">ðŸ“š Explore Courses</h2>
          <div className="grid grid-cols-1 md:grid-cols-3 gap-6">
            {courses.map((course, index) => (
              <CourseCard key={index} course={course} />
            ))}
          </div>
        </div>
      </section>

      <section className="px-6 py-20 bg-gray-100 border-t">
        <div className="max-w-xl mx-auto text-center">
          <h2 className="text-2xl font-semibold mb-4">ðŸŽ¯ Onboarding</h2>
          <p className="text-gray-700 mb-6">{steps[onboardStep]}</p>
          <div className="flex justify-center gap-4">
            <Button
              onClick={handleOnboardResponse}
              className="bg-red-500 text-white px-4 py-2 rounded-xl"
            >
              Next
            </Button>
          </div>
        </div>
      </section>

      {suggestions.length > 0 && (
        <section className="px-6 py-20 bg-white border-t">
          <div className="max-w-4xl mx-auto text-center">
            <h2 className="text-3xl font-semibold mb-6">ðŸ”® AI-Powered Course Suggestions</h2>
            <div className="grid grid-cols-1 md:grid-cols-2 gap-6">
              {suggestions.map((suggestion, index) => (
                <div
                  key={index}
                  className="bg-gray-50 border p-4 rounded-xl shadow hover:shadow-md transition"
                >
                  <h3 className="text-xl font-bold mb-2">{suggestion.title}</h3>
                  <p className="text-gray-700 text-sm">{suggestion.description}</p>
                </div>
              ))}
            </div>
          </div>
        </section>
      )}
    </main>
  );
}
